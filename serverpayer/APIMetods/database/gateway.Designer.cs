//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("bankGatewayModel", "FK_order_consumer", "cards", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(APIMetods.database.card), "orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(APIMetods.database.order), true)]
[assembly: EdmRelationshipAttribute("bankGatewayModel", "FK_order_vendor", "cards", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(APIMetods.database.card), "orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(APIMetods.database.order), true)]
[assembly: EdmRelationshipAttribute("bankGatewayModel", "FK_order_status", "statuss", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(APIMetods.database.statuss), "orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(APIMetods.database.order), true)]

#endregion

namespace APIMetods.database
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class bankGatewayEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект bankGatewayEntities, используя строку соединения из раздела "bankGatewayEntities" файла конфигурации приложения.
        /// </summary>
        public bankGatewayEntities() : base("name=bankGatewayEntities", "bankGatewayEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта bankGatewayEntities.
        /// </summary>
        public bankGatewayEntities(string connectionString) : base(connectionString, "bankGatewayEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта bankGatewayEntities.
        /// </summary>
        public bankGatewayEntities(EntityConnection connection) : base(connection, "bankGatewayEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<card_t> card_t
        {
            get
            {
                if ((_card_t == null))
                {
                    _card_t = base.CreateObjectSet<card_t>("card_t");
                }
                return _card_t;
            }
        }
        private ObjectSet<card_t> _card_t;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<card> cards
        {
            get
            {
                if ((_cards == null))
                {
                    _cards = base.CreateObjectSet<card>("cards");
                }
                return _cards;
            }
        }
        private ObjectSet<card> _cards;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<order_t> order_t
        {
            get
            {
                if ((_order_t == null))
                {
                    _order_t = base.CreateObjectSet<order_t>("order_t");
                }
                return _order_t;
            }
        }
        private ObjectSet<order_t> _order_t;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<order> orders
        {
            get
            {
                if ((_orders == null))
                {
                    _orders = base.CreateObjectSet<order>("orders");
                }
                return _orders;
            }
        }
        private ObjectSet<order> _orders;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<status_t> status_t
        {
            get
            {
                if ((_status_t == null))
                {
                    _status_t = base.CreateObjectSet<status_t>("status_t");
                }
                return _status_t;
            }
        }
        private ObjectSet<status_t> _status_t;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<statuss> statusses
        {
            get
            {
                if ((_statusses == null))
                {
                    _statusses = base.CreateObjectSet<statuss>("statusses");
                }
                return _statusses;
            }
        }
        private ObjectSet<statuss> _statusses;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet card_t. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTocard_t(card_t card_t)
        {
            base.AddObject("card_t", card_t);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet cards. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTocards(card card)
        {
            base.AddObject("cards", card);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet order_t. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToorder_t(order_t order_t)
        {
            base.AddObject("order_t", order_t);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet orders. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToorders(order order)
        {
            base.AddObject("orders", order);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet status_t. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTostatus_t(status_t status_t)
        {
            base.AddObject("status_t", status_t);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet statusses. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTostatusses(statuss statuss)
        {
            base.AddObject("statusses", statuss);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bankGatewayModel", Name="card")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class card : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта card.
        /// </summary>
        /// <param name="card_id">Исходное значение свойства card_id.</param>
        /// <param name="card_number">Исходное значение свойства card_number.</param>
        /// <param name="expiry_month">Исходное значение свойства expiry_month.</param>
        /// <param name="expiry_year">Исходное значение свойства expiry_year.</param>
        /// <param name="cvv">Исходное значение свойства cvv.</param>
        public static card Createcard(global::System.Int32 card_id, global::System.String card_number, global::System.Int32 expiry_month, global::System.Int32 expiry_year, global::System.Int32 cvv)
        {
            card card = new card();
            card.card_id = card_id;
            card.card_number = card_number;
            card.expiry_month = expiry_month;
            card.expiry_year = expiry_year;
            card.cvv = cvv;
            return card;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                if (_card_id != value)
                {
                    Oncard_idChanging(value);
                    ReportPropertyChanging("card_id");
                    _card_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("card_id");
                    Oncard_idChanged();
                }
            }
        }
        private global::System.Int32 _card_id;
        partial void Oncard_idChanging(global::System.Int32 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 expiry_month
        {
            get
            {
                return _expiry_month;
            }
            set
            {
                Onexpiry_monthChanging(value);
                ReportPropertyChanging("expiry_month");
                _expiry_month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("expiry_month");
                Onexpiry_monthChanged();
            }
        }
        private global::System.Int32 _expiry_month;
        partial void Onexpiry_monthChanging(global::System.Int32 value);
        partial void Onexpiry_monthChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 expiry_year
        {
            get
            {
                return _expiry_year;
            }
            set
            {
                Onexpiry_yearChanging(value);
                ReportPropertyChanging("expiry_year");
                _expiry_year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("expiry_year");
                Onexpiry_yearChanged();
            }
        }
        private global::System.Int32 _expiry_year;
        partial void Onexpiry_yearChanging(global::System.Int32 value);
        partial void Onexpiry_yearChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cvv
        {
            get
            {
                return _cvv;
            }
            set
            {
                OncvvChanging(value);
                ReportPropertyChanging("cvv");
                _cvv = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cvv");
                OncvvChanged();
            }
        }
        private global::System.Int32 _cvv;
        partial void OncvvChanging(global::System.Int32 value);
        partial void OncvvChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cardholder_name
        {
            get
            {
                return _cardholder_name;
            }
            set
            {
                Oncardholder_nameChanging(value);
                ReportPropertyChanging("cardholder_name");
                _cardholder_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cardholder_name");
                Oncardholder_nameChanged();
            }
        }
        private global::System.String _cardholder_name;
        partial void Oncardholder_nameChanging(global::System.String value);
        partial void Oncardholder_nameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> cash
        {
            get
            {
                return _cash;
            }
            set
            {
                OncashChanging(value);
                ReportPropertyChanging("cash");
                _cash = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cash");
                OncashChanged();
            }
        }
        private Nullable<global::System.Decimal> _cash;
        partial void OncashChanging(Nullable<global::System.Decimal> value);
        partial void OncashChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bankGatewayModel", "FK_order_consumer", "orders")]
        public EntityCollection<order> orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<order>("bankGatewayModel.FK_order_consumer", "orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<order>("bankGatewayModel.FK_order_consumer", "orders", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bankGatewayModel", "FK_order_vendor", "orders")]
        public EntityCollection<order> orders1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<order>("bankGatewayModel.FK_order_vendor", "orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<order>("bankGatewayModel.FK_order_vendor", "orders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bankGatewayModel", Name="card_t")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class card_t : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта card_t.
        /// </summary>
        /// <param name="card_id">Исходное значение свойства card_id.</param>
        /// <param name="card_number">Исходное значение свойства card_number.</param>
        /// <param name="expiry_month">Исходное значение свойства expiry_month.</param>
        /// <param name="expiry_year">Исходное значение свойства expiry_year.</param>
        /// <param name="cvv">Исходное значение свойства cvv.</param>
        public static card_t Createcard_t(global::System.Int32 card_id, global::System.String card_number, global::System.Int32 expiry_month, global::System.Int32 expiry_year, global::System.Int32 cvv)
        {
            card_t card_t = new card_t();
            card_t.card_id = card_id;
            card_t.card_number = card_number;
            card_t.expiry_month = expiry_month;
            card_t.expiry_year = expiry_year;
            card_t.cvv = cvv;
            return card_t;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                if (_card_id != value)
                {
                    Oncard_idChanging(value);
                    ReportPropertyChanging("card_id");
                    _card_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("card_id");
                    Oncard_idChanged();
                }
            }
        }
        private global::System.Int32 _card_id;
        partial void Oncard_idChanging(global::System.Int32 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 expiry_month
        {
            get
            {
                return _expiry_month;
            }
            set
            {
                Onexpiry_monthChanging(value);
                ReportPropertyChanging("expiry_month");
                _expiry_month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("expiry_month");
                Onexpiry_monthChanged();
            }
        }
        private global::System.Int32 _expiry_month;
        partial void Onexpiry_monthChanging(global::System.Int32 value);
        partial void Onexpiry_monthChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 expiry_year
        {
            get
            {
                return _expiry_year;
            }
            set
            {
                Onexpiry_yearChanging(value);
                ReportPropertyChanging("expiry_year");
                _expiry_year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("expiry_year");
                Onexpiry_yearChanged();
            }
        }
        private global::System.Int32 _expiry_year;
        partial void Onexpiry_yearChanging(global::System.Int32 value);
        partial void Onexpiry_yearChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cvv
        {
            get
            {
                return _cvv;
            }
            set
            {
                OncvvChanging(value);
                ReportPropertyChanging("cvv");
                _cvv = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cvv");
                OncvvChanged();
            }
        }
        private global::System.Int32 _cvv;
        partial void OncvvChanging(global::System.Int32 value);
        partial void OncvvChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cardholder_name
        {
            get
            {
                return _cardholder_name;
            }
            set
            {
                Oncardholder_nameChanging(value);
                ReportPropertyChanging("cardholder_name");
                _cardholder_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cardholder_name");
                Oncardholder_nameChanged();
            }
        }
        private global::System.String _cardholder_name;
        partial void Oncardholder_nameChanging(global::System.String value);
        partial void Oncardholder_nameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> cash
        {
            get
            {
                return _cash;
            }
            set
            {
                OncashChanging(value);
                ReportPropertyChanging("cash");
                _cash = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cash");
                OncashChanged();
            }
        }
        private Nullable<global::System.Decimal> _cash;
        partial void OncashChanging(Nullable<global::System.Decimal> value);
        partial void OncashChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bankGatewayModel", Name="order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class order : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта order.
        /// </summary>
        /// <param name="order_id">Исходное значение свойства order_id.</param>
        /// <param name="consumer_id">Исходное значение свойства consumer_id.</param>
        /// <param name="vendor_id">Исходное значение свойства vendor_id.</param>
        /// <param name="amount_kop">Исходное значение свойства amount_kop.</param>
        /// <param name="status_id">Исходное значение свойства status_id.</param>
        public static order Createorder(global::System.Int32 order_id, global::System.Int32 consumer_id, global::System.Int32 vendor_id, global::System.Decimal amount_kop, global::System.Int32 status_id)
        {
            order order = new order();
            order.order_id = order_id;
            order.consumer_id = consumer_id;
            order.vendor_id = vendor_id;
            order.amount_kop = amount_kop;
            order.status_id = status_id;
            return order;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 order_id
        {
            get
            {
                return _order_id;
            }
            set
            {
                if (_order_id != value)
                {
                    Onorder_idChanging(value);
                    ReportPropertyChanging("order_id");
                    _order_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("order_id");
                    Onorder_idChanged();
                }
            }
        }
        private global::System.Int32 _order_id;
        partial void Onorder_idChanging(global::System.Int32 value);
        partial void Onorder_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 consumer_id
        {
            get
            {
                return _consumer_id;
            }
            set
            {
                Onconsumer_idChanging(value);
                ReportPropertyChanging("consumer_id");
                _consumer_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("consumer_id");
                Onconsumer_idChanged();
            }
        }
        private global::System.Int32 _consumer_id;
        partial void Onconsumer_idChanging(global::System.Int32 value);
        partial void Onconsumer_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 vendor_id
        {
            get
            {
                return _vendor_id;
            }
            set
            {
                Onvendor_idChanging(value);
                ReportPropertyChanging("vendor_id");
                _vendor_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("vendor_id");
                Onvendor_idChanged();
            }
        }
        private global::System.Int32 _vendor_id;
        partial void Onvendor_idChanging(global::System.Int32 value);
        partial void Onvendor_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal amount_kop
        {
            get
            {
                return _amount_kop;
            }
            set
            {
                Onamount_kopChanging(value);
                ReportPropertyChanging("amount_kop");
                _amount_kop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount_kop");
                Onamount_kopChanged();
            }
        }
        private global::System.Decimal _amount_kop;
        partial void Onamount_kopChanging(global::System.Decimal value);
        partial void Onamount_kopChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 status_id
        {
            get
            {
                return _status_id;
            }
            set
            {
                Onstatus_idChanging(value);
                ReportPropertyChanging("status_id");
                _status_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("status_id");
                Onstatus_idChanged();
            }
        }
        private global::System.Int32 _status_id;
        partial void Onstatus_idChanging(global::System.Int32 value);
        partial void Onstatus_idChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bankGatewayModel", "FK_order_consumer", "cards")]
        public card card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("bankGatewayModel.FK_order_consumer", "cards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("bankGatewayModel.FK_order_consumer", "cards").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<card> cardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("bankGatewayModel.FK_order_consumer", "cards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<card>("bankGatewayModel.FK_order_consumer", "cards", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bankGatewayModel", "FK_order_vendor", "cards")]
        public card card1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("bankGatewayModel.FK_order_vendor", "cards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("bankGatewayModel.FK_order_vendor", "cards").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<card> card1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("bankGatewayModel.FK_order_vendor", "cards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<card>("bankGatewayModel.FK_order_vendor", "cards", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bankGatewayModel", "FK_order_status", "statuss")]
        public statuss statuss
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statuss>("bankGatewayModel.FK_order_status", "statuss").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statuss>("bankGatewayModel.FK_order_status", "statuss").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<statuss> statussReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statuss>("bankGatewayModel.FK_order_status", "statuss");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<statuss>("bankGatewayModel.FK_order_status", "statuss", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bankGatewayModel", Name="order_t")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class order_t : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта order_t.
        /// </summary>
        /// <param name="order_id">Исходное значение свойства order_id.</param>
        /// <param name="consumer_id">Исходное значение свойства consumer_id.</param>
        /// <param name="vendor_id">Исходное значение свойства vendor_id.</param>
        /// <param name="amount_kop">Исходное значение свойства amount_kop.</param>
        /// <param name="status_id">Исходное значение свойства status_id.</param>
        public static order_t Createorder_t(global::System.Int32 order_id, global::System.Int32 consumer_id, global::System.Int32 vendor_id, global::System.Decimal amount_kop, global::System.Int32 status_id)
        {
            order_t order_t = new order_t();
            order_t.order_id = order_id;
            order_t.consumer_id = consumer_id;
            order_t.vendor_id = vendor_id;
            order_t.amount_kop = amount_kop;
            order_t.status_id = status_id;
            return order_t;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 order_id
        {
            get
            {
                return _order_id;
            }
            set
            {
                if (_order_id != value)
                {
                    Onorder_idChanging(value);
                    ReportPropertyChanging("order_id");
                    _order_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("order_id");
                    Onorder_idChanged();
                }
            }
        }
        private global::System.Int32 _order_id;
        partial void Onorder_idChanging(global::System.Int32 value);
        partial void Onorder_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 consumer_id
        {
            get
            {
                return _consumer_id;
            }
            set
            {
                Onconsumer_idChanging(value);
                ReportPropertyChanging("consumer_id");
                _consumer_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("consumer_id");
                Onconsumer_idChanged();
            }
        }
        private global::System.Int32 _consumer_id;
        partial void Onconsumer_idChanging(global::System.Int32 value);
        partial void Onconsumer_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 vendor_id
        {
            get
            {
                return _vendor_id;
            }
            set
            {
                Onvendor_idChanging(value);
                ReportPropertyChanging("vendor_id");
                _vendor_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("vendor_id");
                Onvendor_idChanged();
            }
        }
        private global::System.Int32 _vendor_id;
        partial void Onvendor_idChanging(global::System.Int32 value);
        partial void Onvendor_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal amount_kop
        {
            get
            {
                return _amount_kop;
            }
            set
            {
                Onamount_kopChanging(value);
                ReportPropertyChanging("amount_kop");
                _amount_kop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount_kop");
                Onamount_kopChanged();
            }
        }
        private global::System.Decimal _amount_kop;
        partial void Onamount_kopChanging(global::System.Decimal value);
        partial void Onamount_kopChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 status_id
        {
            get
            {
                return _status_id;
            }
            set
            {
                Onstatus_idChanging(value);
                ReportPropertyChanging("status_id");
                _status_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("status_id");
                Onstatus_idChanged();
            }
        }
        private global::System.Int32 _status_id;
        partial void Onstatus_idChanging(global::System.Int32 value);
        partial void Onstatus_idChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bankGatewayModel", Name="status_t")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class status_t : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта status_t.
        /// </summary>
        /// <param name="status_id">Исходное значение свойства status_id.</param>
        public static status_t Createstatus_t(global::System.Int32 status_id)
        {
            status_t status_t = new status_t();
            status_t.status_id = status_id;
            return status_t;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 status_id
        {
            get
            {
                return _status_id;
            }
            set
            {
                if (_status_id != value)
                {
                    Onstatus_idChanging(value);
                    ReportPropertyChanging("status_id");
                    _status_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("status_id");
                    Onstatus_idChanged();
                }
            }
        }
        private global::System.Int32 _status_id;
        partial void Onstatus_idChanging(global::System.Int32 value);
        partial void Onstatus_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mesasage
        {
            get
            {
                return _mesasage;
            }
            set
            {
                OnmesasageChanging(value);
                ReportPropertyChanging("mesasage");
                _mesasage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("mesasage");
                OnmesasageChanged();
            }
        }
        private global::System.String _mesasage;
        partial void OnmesasageChanging(global::System.String value);
        partial void OnmesasageChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bankGatewayModel", Name="statuss")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class statuss : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта statuss.
        /// </summary>
        /// <param name="status_id">Исходное значение свойства status_id.</param>
        public static statuss Createstatuss(global::System.Int32 status_id)
        {
            statuss statuss = new statuss();
            statuss.status_id = status_id;
            return statuss;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 status_id
        {
            get
            {
                return _status_id;
            }
            set
            {
                if (_status_id != value)
                {
                    Onstatus_idChanging(value);
                    ReportPropertyChanging("status_id");
                    _status_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("status_id");
                    Onstatus_idChanged();
                }
            }
        }
        private global::System.Int32 _status_id;
        partial void Onstatus_idChanging(global::System.Int32 value);
        partial void Onstatus_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mesasage
        {
            get
            {
                return _mesasage;
            }
            set
            {
                OnmesasageChanging(value);
                ReportPropertyChanging("mesasage");
                _mesasage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("mesasage");
                OnmesasageChanged();
            }
        }
        private global::System.String _mesasage;
        partial void OnmesasageChanging(global::System.String value);
        partial void OnmesasageChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bankGatewayModel", "FK_order_status", "orders")]
        public EntityCollection<order> orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<order>("bankGatewayModel.FK_order_status", "orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<order>("bankGatewayModel.FK_order_status", "orders", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
